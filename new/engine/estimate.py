# -*- coding: utf-8 -*-

from chess.chessboard import *

# 估值相关数组
PieceNumToType = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6,
        0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 6, 6, 6
        ]

PositionValues = [
        [
            [ # 帅(将)
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0, 10, 10, 10,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0, 15, 20, 15,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                ],
            [ # 仕(士)
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0, 30,  0, 30,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0, 22,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0, 30,  0, 30,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                ],
            [ # 相(象)
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0, 25,  0,  0,  0, 25,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0, 20,  0,  0,  0, 35,  0,  0,  0, 20,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0, 30,  0,  0,  0, 30,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                ],
            [ # 马
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0, 70, 80, 90, 80, 70, 80, 90, 80, 70,  0,  0,  0,  0,
                    0,  0,  0, 80,110,125, 90, 70, 90,125,110, 80,  0,  0,  0,  0,
                    0,  0,  0, 90,100,120,125,120,125,120,100, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,100,120,130,110,130,120,100, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,110,110,120,100,120,110,110, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,100,100,110,100,110,100,100, 90,  0,  0,  0,  0,
                    0,  0,  0, 80, 90,100,100, 90,100,100, 90, 80,  0,  0,  0,  0,
                    0,  0,  0, 80, 80, 90, 90, 80, 90, 90, 80, 80,  0,  0,  0,  0,
                    0,  0,  0, 70, 75, 75, 70, 50, 70, 75, 75, 70,  0,  0,  0,  0,
                    0,  0,  0, 60, 70, 75, 70, 60, 70, 75, 70, 60,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ],
            [ # 车
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,160,170,160,150,150,150,160,170,160,  0,  0,  0,  0,
                    0,  0,  0,170,180,170,190,250,190,170,180,170,  0,  0,  0,  0,
                    0,  0,  0,170,190,200,220,240,220,200,190,170,  0,  0,  0,  0,
                    0,  0,  0,180,220,210,240,250,240,210,220,180,  0,  0,  0,  0,
                    0,  0,  0,180,220,210,240,250,240,210,220,180,  0,  0,  0,  0,
                    0,  0,  0,180,220,210,240,250,240,210,220,180,  0,  0,  0,  0,
                    0,  0,  0,170,190,180,220,240,220,200,190,170,  0,  0,  0,  0,
                    0,  0,  0,170,180,170,170,160,170,170,180,170,  0,  0,  0,  0,
                    0,  0,  0,160,170,160,160,150,160,160,170,160,  0,  0,  0,  0,
                    0,  0,  0,150,160,150,160,150,160,150,160,150,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ],
            [ # 炮
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,125,130,100, 70, 60, 70,100,130,125,  0,  0,  0,  0,
                    0,  0,  0,110,125,100, 70, 60, 70,100,125,110,  0,  0,  0,  0,
                    0,  0,  0,100,120, 90, 80, 80, 80, 90,120,100,  0,  0,  0,  0,
                    0,  0,  0, 90,110, 90,110,130,110, 90,110, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,110, 90,110,130,110, 90,110, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,100, 90,110,130,110, 90,100, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,100, 90, 90,110, 90, 90,100, 90,  0,  0,  0,  0,
                    0,  0,  0, 90,100, 80, 80, 70, 80, 80,100, 90,  0,  0,  0,  0,
                    0,  0,  0, 80, 90, 80, 70, 65, 70, 80, 90, 80,  0,  0,  0,  0,
                    0,  0,  0, 80, 90, 80, 70, 60, 70, 80, 90, 80,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ],
            [ # 兵(卒)
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0, 10, 10, 10, 20, 25, 20, 10, 10, 10,  0,  0,  0,  0,
                    0,  0,  0, 25, 30, 40, 50, 60, 50, 40, 30, 25,  0,  0,  0,  0,
                    0,  0,  0, 25, 30, 30, 40, 40, 40, 30, 30, 25,  0,  0,  0,  0,
                    0,  0,  0, 20, 25, 25, 30, 30, 30, 25, 25, 20,  0,  0,  0,  0,
                    0,  0,  0, 15, 20, 20, 20, 20, 20, 20, 20, 15,  0,  0,  0,  0,
                    0,  0,  0, 10,  0, 15,  0, 15,  0, 15,  0, 10,  0,  0,  0,  0,
                    0,  0,  0, 10,  0, 10,  0, 15,  0, 10,  0, 10,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ]
            ],
        [
                [ # 黑将
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0, 15, 20, 15,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0, 10, 10, 10,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ],
                [ # 黑士
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0, 30,  0, 30,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0, 22,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0, 30,  0, 30,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ],
                [ # 黑象
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0, 30,  0,  0,  0, 30,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0, 20,  0,  0,  0, 35,  0,  0,  0, 20,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0, 25,  0,  0,  0, 25,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                    ],
                [ # 黑马
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0, 60, 70, 75, 70, 60, 70, 75, 70, 60,  0,  0,  0,  0,
                        0,  0,  0, 70, 75, 75, 70, 50, 70, 75, 75, 70,  0,  0,  0,  0,
                        0,  0,  0, 80, 80, 90, 90, 80, 90, 90, 80, 80,  0,  0,  0,  0,
                        0,  0,  0, 80, 90,100,100, 90,100,100, 90, 80,  0,  0,  0,  0,
                        0,  0,  0, 90,100,100,110,100,110,100,100, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,110,110,120,100,120,110,110, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,100,120,130,110,130,120,100, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,100,120,125,120,125,120,100, 90,  0,  0,  0,  0,
                        0,  0,  0, 80,110,125, 90, 70, 90,125,110, 80,  0,  0,  0,  0,
                        0,  0,  0, 70, 80, 90, 80, 70, 80, 90, 80, 70,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                        ],
                [ # 黑车
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,150,160,150,160,150,160,150,160,150,  0,  0,  0,  0,
                        0,  0,  0,160,170,160,160,150,160,160,170,160,  0,  0,  0,  0,
                        0,  0,  0,170,180,170,170,160,170,170,180,170,  0,  0,  0,  0,
                        0,  0,  0,170,190,200,220,240,220,180,190,170,  0,  0,  0,  0,
                        0,  0,  0,180,220,210,240,250,240,210,220,180,  0,  0,  0,  0,
                        0,  0,  0,180,220,210,240,250,240,210,220,180,  0,  0,  0,  0,
                        0,  0,  0,180,220,210,240,250,240,210,220,180,  0,  0,  0,  0,
                        0,  0,  0,170,190,200,220,240,220,200,190,170,  0,  0,  0,  0,
                        0,  0,  0,170,180,170,190,250,190,170,180,170,  0,  0,  0,  0,
                        0,  0,  0,160,170,160,150,150,150,160,170,160,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                        ],
                [ # 黑炮
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0, 80, 90, 80, 70, 60, 70, 80, 90, 80,  0,  0,  0,  0,
                        0,  0,  0, 80, 90, 80, 70, 65, 70, 80, 90, 80,  0,  0,  0,  0,
                        0,  0,  0, 90,100, 80, 80, 70, 80, 80,100, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,100, 90, 90,110, 90, 90,100, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,100, 90,110,130,110, 90,100, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,110, 90,110,130,110, 90,110, 90,  0,  0,  0,  0,
                        0,  0,  0, 90,110, 90,110,130,110, 90,110, 90,  0,  0,  0,  0,
                        0,  0,  0,100,120, 90, 80, 80, 80, 90,120,100,  0,  0,  0,  0,
                        0,  0,  0,110,125,100, 70, 60, 70,100,125,110,  0,  0,  0,  0,
                        0,  0,  0,125,130,100, 70, 60, 70,100,130,125,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                        ],
                [ # 黑兵
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0, 10,  0, 10,  0, 15,  0, 10,  0, 10,  0,  0,  0,  0,
                        0,  0,  0, 10,  0, 15,  0, 15,  0, 15,  0, 10,  0,  0,  0,  0,
                        0,  0,  0, 15, 20, 20, 20, 20, 20, 20, 20, 15,  0,  0,  0,  0,
                        0,  0,  0, 20, 25, 25, 30, 30, 30, 25, 25, 20,  0,  0,  0,  0,
                        0,  0,  0, 25, 30, 30, 40, 40, 40, 30, 30, 25,  0,  0,  0,  0,
                        0,  0,  0, 25, 30, 40, 50, 60, 50, 40, 30, 25,  0,  0,  0,  0,
                        0,  0,  0, 10, 10, 10, 20, 25, 20, 10, 10, 10,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
                        ]
                ]
]


def eval_flex():
    p = 0   # p:棋子位置
    n = 0   # 下一步可能行走的位置
    m = 0   # 马腿、象眼位置
    SideTag = 16    # 走棋方，红方16，黑方32
    OverFlag = 0    #炮的翻山标志
    fValue = [0, 0] # 灵活性分值

    # 计算灵活性分值
    for r in range(2):
        SideTag = 16 + 16 * r

        # 将的灵活性
        for k in range(4):
            n = p + KingDir[k] # n为新的可能走到的位置
            if (LegalPosition[r][n] & PositionMask[0]): # 将对应下标为0
                if (not (board[n] & SideTag)): #目标位置上没有本方棋子
                    fValue[r] = fValue[r] + 2

        # 士的灵活性
        for i in range(1, 3):
            p = piece[SideTag + i]
            if (not p):
                continue
            for k in range(4): # 4个方向
                n = p + AdvisorDir[k] # n为新的可能走到的位置
                if (LegalPosition[r][n] & PositionMask[1]): # 士将对应下标为1
                    if (not (board[n] & SideTag)): # 目标位置上没有本方棋子
                        fValue[r] = fValue[r] + 2

        # 象的走法灵活性
        for i in range(3, 5):
            p = piece[SideTag + i]
            if (not p):
                continue
            for k in range(4): # 4个方向
                n = p + BishopDir[k] # n为新的可能走到的位置
                if (LegalPosition[r][n] & PositionMask[2]): #象将对应下标为2
                    m = p + BishopCheck[k]
                    if (not board[m]): # 象眼位置无棋子占据
                        if (not (board[n] & SideTag)): # 目标位置上没有本方棋子
                            fValue[r] = fValue[r] + 2

        # 马的灵活性
        for i in range(5, 7):
            p = piece[SideTag + i]
            if (not p):
                continue
            for k in range(8): # 8个方向
                n = p + KnightDir[k] # n为新的可能走到的位置
                if (LegalPosition[r][n] & PositionMask[3]): # 马将对应下标为3
                    m = p + KnightCheck[k]
                    if (not board[m]): # 马腿位置无棋子占据
                        if (not (board[n] & SideTag)): # 目标位置上没有本方棋子
                            fValue[r] = fValue[r] + 5

        # 车的灵活性
        for i in range(7, 9):
            p = piece[SideTag + i]
            if (not p):
                continue
            for k in range(4): #4个方向
                for j in range(1, 10): # 横的最多有8个可能走的位置，纵向最多有9个位置
                    n = p + j * RookDir[k]
                    if (not (LegalPosition[r][n] & PositionMask[4])): # 车士将对应下标为4
                        break # 不合理的位置
                    if (not board[n] ): # 目标位置上无子
                        fValue[r] = fValue[r] + 4
                    elif (board[n] & SideTag): # 目标位置上有本方棋子
                        break
                    else: # 目标位置上有对方棋子
                        fValue[r] = fValue[r] + 4
                        break

        # 炮的灵活性
        for i in range(9, 11):
            p = piece[SideTag + i]
            if (not p):
                continue
            for k in range(4): # 4个方向
                OverFlag = 0
                for j in range(1, 10): # 横的最多有8个可能走的位置，纵向最多有9个位置
                    n = p + j * CannonDir[k]
                    if (not (LegalPosition[r][n] & PositionMask[5])): # 炮士将对应下标为5
                        break # 不合理的位置
                    if (not board[n]): # 目标位置上无子
                        if (not OverFlag): #未翻山
                            fValue[r] = fValue[r] + 3
                        # 已翻山则不作处理，自动考察向下一个位置
                    else: # 目标位置上有子
                        if (not OverFlag): # 未翻山则置翻山标志
                            OverFlag = 1
                        else: # 已翻山
                            if (not (board[n] & SideTag)): # 对方棋子
                                fValue[r] = fValue[r] + 3
                            break # 不论吃不吃子，都退出此方向搜索

        # 兵的灵活性
        for i in range(11, 16):
            p = piece[SideTag + i]
            if (not p):
                continue
            for k in range(3): # 3个方向
                n = p + PawnDir[r][k] # n为新的可能走到的位置
                if (LegalPosition[r][n] & PositionMask[6]): # 兵士将对应下标为6
                    if (not (board[n] & SideTag)): #目标位置上没有本方棋子
                        fValue[r] = fValue[r] + 2
    if side == 0:
        return fValue[0] - fValue[1]
    else:
        return fValue[1] - fValue[0]


def eval(board, piece, side):
    b_value = 0
    w_value = 0

    # 计算固定位置分值
    for i in range(16, 32):
        if (piece[i]>0):
            w_value = w_value + PositionValues[0][PieceNumToType[i]][piece[i]]

    for i in range(32, 48):
        if (piece[i]>0):
            b_value = b_value + PositionValues[1][PieceNumToType[i]][piece[i]]

    if side == 0:
        return w_value - b_value
    else:
        return b_value - w_value
